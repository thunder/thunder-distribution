<?php

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Config\Entity\ConfigEntityInterface;
use Drupal\thunder_text_export\Ajax\CopyToClipboardCommand;
use Drupal\Core\Ajax\AjaxResponse;
use Drupal\Component\Render\PlainTextOutput;

function thunder_text_export_form_node_type_edit_form_alter(array &$form, FormStateInterface $form_state) {

  $form['#entity_builders'][] = '_thunder_text_export_form_entity_type_form_builder';
}

function _thunder_text_export_form_entity_type_form_builder(string $entity_type, ConfigEntityInterface $type, array &$form, FormStateInterface $form_state) {

  $type->setThirdPartySetting('thunder_text_export', 'view_mode', 'd');
}

function thunder_text_export_form_node_form_alter(array &$form, FormStateInterface $form_state) {

  // Add the custom button to the node form actions.
  $form['actions']['copyToClipboard'] = [
    '#type' => 'submit',
    '#value' => t('AI Text Export'),
    '#ajax' => [
      'callback' => 'thunder_text_export_button_ajax_callback',
    ],
  ];

  $form['#attached']['library'][] = "thunder_text_export/copyToClipboard";
}

/**
 * AJAX callback for the clipboard button.
 */
function thunder_text_export_button_ajax_callback(array &$form, FormStateInterface $form_state) {
  $response = new AjaxResponse();

  $entity = $form_state->getformObject()->getEntity();

  $build = \Drupal::entityTypeManager()
    ->getViewBuilder($entity->getEntityTypeId())
    ->view($entity, 'full');

  $output = PlainTextOutput::renderFromHtml((string) \Drupal::service('renderer')->renderPlain($build));

  // Use the ClipboardCommand to copy the text to the user's clipboard.
  $response->addCommand(new CopyToClipboardCommand($output));

  return $response;
}

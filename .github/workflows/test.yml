name: Run distribution tests

on:
  pull_request:
    branches:
      - 8.x-[1-9]+.x
    paths-ignore:
      - '**.md'

env:
  DRUPAL_TESTING_COMPOSER_PROJECT: thunder/thunder-project
  DRUPAL_TESTING_DATABASE_USER: root
  DRUPAL_TESTING_DATABASE_PASSWORD: root
  DRUPAL_TESTING_TEST_DUMP_FILE: dump.sql
  DRUPAL_TESTING_DATABASE_ENGINE: mysql
  DRUPAL_TESTING_TEST_CODING_STYLES: false
  DRUPAL_TESTING_TEST_PROFILE: thunder
  DRUPAL_TESTING_INSTALLATION_FORM_VALUES: "thunder_module_configure_form.install_modules_thunder_demo=NULL"
  DRUPAL_TESTING_TEST_DEPRECATION: false
  DRUPAL_TESTING_TEST_GROUP: Thunder
  PUSHER_CREDENTIALS: ${{ secrets.PUSHER_CREDENTIALS }}
  RIDDLE_TOKEN: ${{ secrets.RIDDLE_TOKEN }}

jobs:

  build:

    runs-on: ubuntu-latest

    if: false

    steps:
      - uses: actions/checkout@v1

      - uses: shivammathur/setup-php@master
        with:
          coverage: none
          php-version: '7.3'
          extensions: Imagick

      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-composer-cache-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-cache-

      - name: Setup environment variables
        run: |
          echo "::add-path::$HOME/.composer/vendor/bin"

      - name: Get build environment
        run: composer global require thunder/drupal-testing

      - name: Prepare the build
        run: test-drupal-project prepare_build

      - name: Install suggested dependencies
        run: composer require "thunder/thunder_performance_measurement:dev-master" "thunder/testsite_builder:dev-master" "drupal/media_entity_generic:^1.0" "drupal/riddle_marketplace:^3.0-beta2" "drupal/nexx_integration:^3.0" "valiton/harbourmaster:~8.1" --no-update --no-progress --working-dir=/tmp/test/thunder/install

      - name: Build the docroot
        run: test-drupal-project build

      - name: Test for deprecations
        run: test-drupal-project deprecation
        continue-on-error: true

      - name: Install drupal
        run: test-drupal-project install

      - name: Zip build
        run: cd /tmp/test; tar cfhz build.tgz thunder; mv build.tgz ${GITHUB_WORKSPACE}

      - name: Upload build
        uses: actions/upload-artifact@v1
        with:
          name: build
          path: build.tgz

  test-max:
    needs: build

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1

    - uses: shivammathur/setup-php@master
      with:
        coverage: none
        php-version: '7.3'
        extensions: Imagick

    - name: Setup environment variables
      run: |
        echo "::add-path::$HOME/.composer/vendor/bin"

    - name: Get build environment
      run: composer global require thunder/drupal-testing:dev-master

    - name: Download build
      uses: actions/download-artifact@v1
      with:
        name: build

    - name: Unzip build artifact
      run: mkdir -p /tmp/test; tar xCfz /tmp/test build/build.tgz thunder; rm -rf build

    - name: Run the tests
      run: test-drupal-project

  test-min:

    runs-on: ubuntu-latest

    if: false
    #if: ${{ contains(github.event.pull_request.labels.*.name, 'test-min') }}

    env:
      DRUPAL_TESTING_DRUPAL_VERSION: '~8.8.1'

    steps:
      - uses: actions/checkout@v1

      - uses: shivammathur/setup-php@master
        with:
          coverage: none
          php-version: '7.3'
          extensions: Imagick

      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-composer-cache-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-cache-

      - name: Setup environment variables
        run: |
          echo "::add-path::$HOME/.composer/vendor/bin"

      - name: Get build environment
        run: composer global require thunder/drupal-testing:dev-feature/min-testing

      - name: Setup the environment
        run: test-drupal-project setup

      - name: Prepare the build
        run: test-drupal-project prepare_build

      - name: Install suggested dependencies
        run: composer require "drupal/riddle_marketplace:^3.0-beta2" "drupal/nexx_integration:^3.0" "valiton/harbourmaster:~8.1" --no-update --no-progress --working-dir=/tmp/test/thunder/install

      - name: Build the docroot
        run: test-drupal-project build
        env:
          DRUPAL_TESTING_MIN_BUILD: true

      - name: Test for deprecations
        run: test-drupal-project deprecation
        continue-on-error: true

      - name: Install drupal
        run: test-drupal-project install

      - name: Start webserver
        run: test-drupal-project start_web_server

      - name: Run the tests
        run: test-drupal-project run_tests

  test-performance:
    #needs: build

    runs-on: ubuntu-latest

    if: true
    #if: ${{ contains(github.event.pull_request.labels.*.name, 'test-performance') }}

    env:
      DOCKER_SANITIZED_BRANCH_NAME: ${GITHUB_HEAD_REF/\//_}

    steps:

      - uses: actions/checkout@v1
        with:
          repository: thunder/docker-thunder-performance
          path: thunder-distribution/docker-thunder-performance
          ref: 'master'

      - uses: shivammathur/setup-php@master
        with:
          coverage: none
          php-version: '7.3'
          extensions: Imagick

      - name: Setup environment variables
        run: |
          echo "::add-path::$HOME/.composer/vendor/bin"

      - name: Get build environment
        run: composer global require thunder/drupal-testing:dev-feature/min-testing

      - name: Download build
        uses: actions/download-artifact@v1
        with:
          name: build

      - name: Unzip build artifact
        run: mkdir -p /tmp/test; tar xCfz /tmp/test build/build.tgz thunder; rm -rf build; mv /tmp/test/thunder/install ${GITHUB_WORKSPACE}/docker-thunder-performance/www

      - name: Build docker image
        run: |
          # Build Docker image and tag it
          DOCKER_SANITIZED_BRANCH_NAME=$(echo "${{ github.head_ref }}" | sed 's/\//_/g')
          DOCKER_IMAGE_TAG="burda/thunder-performance:${DOCKER_SANITIZED_BRANCH_NAME}-${{ github.run_id }}"
          cd docker-thunder-performance
          ./build.sh --tag "${DOCKER_IMAGE_TAG}"
          # list Docker images
          docker images
          # Login to Docker HUB
          echo "${{ secrets.DOCKER_PASSWORD_BASE64 }}" | base64 -d | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

          # Push to Docker HUB
          docker push "${DOCKER_IMAGE_TAG}"

          # Start Thunde performance testing task for created image
          API_CALL_HTTP_CODE=$(curl \
          --request POST \
          --insecure \
          "https://${{ secrets.THUNDER_PTM_HOST }}:3000/warmers" \
          --header "Authorization: Bearer ${{ secrets.THUNDER_PTM_TOKEN }}" \
          --header "Content-Type: application/json" \
          --data "{\"branchTag\":\"${DOCKER_SANITIZED_BRANCH_NAME}\",\"imageTag\":\"${DOCKER_SANITIZED_BRANCH_NAME}-${{ github.run_id }}\",\"composeType\":\"default\"}" \
          --output /dev/stderr \
          --write-out "%{http_code}" \
          )

          if [[ "${API_CALL_HTTP_CODE}" != "200" ]]; then
            exit 1
          fi

#   Start a debug session.
#   - name: Setup tmate session
#     uses: mxschmitt/action-tmate@v1
